name: Publish gh-pages

description: 'Action to publish reports to gh-pages'

inputs:
  artifacts:
    description: 'Artifacts to be published to gh-pages'
    required: true
  domain:
    description: 'GH pages domain name'
    required: true
  comment-title:
    description: 'Comment title'
    required: false
    default: 'Test reports'

runs:
  using: 'composite'
  steps:
    - name: Checkout gh-pages branch
      uses: actions/checkout@v3
      with:
        ref: gh-pages

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: reports
        path: artifacts/reports

    - name: Commit reports
      shell: bash
      env:
        BRANCH_NAME: ${{ github.head_ref }}
      run: |
        if [ -z "${{ inputs.artifacts }}" ]
        then
          echo "Please specify artifacts to be published to gh-pages"
          exit 1
        fi

        mkdir -p reports/$BRANCH_NAME
        cd reports/$BRANCH_NAME
        
        rm -rf -- *

        echo '${{ inputs.artifacts }}' | jq -r 'to_entries[] | "\(.value)"' | while read report_path; do
          cp -R ${{ github.workspace }}/artifacts/reports/$report_path .
        done
        
        rm -rf -- ${{ github.workspace }}/artifacts/
        
        git config user.name github-actions
        git config user.email github-actions@github.com
        git status
        git add .
        git commit -am $BRANCH_NAME || true
        git push

    - name: Comment report details on pull request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        BRANCH_NAME: ${{ github.head_ref }}
        SHA_SHORT: $(git rev-parse --short ${{ github.event.pull_request.head.sha }})
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.number
          });
          
          const githubActionBotUser = await github.rest.users.getByUsername({ username: 'github-actions[bot]' });

          console.log(JSON.stringify(githubActionBotUser));
          console.log(`${{ BRANCH_NAME }}`);
          console.log(`${{ SHA_SHORT }}`);
          
          const botComment = comments.find(comment => comment.user.id === githubActionBotUser.data.id && comment.body.includes(`## ${{ inputs.comment-title }}`));
          
          const artifactsObj = JSON.parse(`${{ inputs.artifacts }}`);
          let commentBody = "";
          
          for (const key in artifactsObj) {
            commentBody += `- [${key}](${{ inputs.domain }}/reports/${{ BRANCH_NAME }}/${artifactsObj[key]})\n`
          }

          const comment = `## ${{ inputs.comment-title }}\n\nCommit: ${{ SHA_SHORT }}\n\n${commentBody}`
          
          if(botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: `${comment}\n\n:recycle: This comment has been updated with latest results.`
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              body: comment
            });
          }
